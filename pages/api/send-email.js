const mail = require("@sendgrid/mail");

mail.setApiKey(process.env.SENDGRID_API_KEY);

export default async function POST (req, res) {
  const body = JSON.parse(req.body);

  try {
    // Generate email text based on conditions

    let emailText = "";
    if (!body.date) {
      emailText = `–ü—Ä–∏–≤–µ—Ç! <br/>  –¢–≤–æ–∏ —É—Ä–æ–∫–∏ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω—ã. –ñ–¥—ë–º —Ç–µ–±—è –∫–∞–∂–¥—ã–µ ${
        body.days
      } –≤ ${body.time.slice(
        0,
        5
      )}. –ú—ã –ø—Ä–∏—à–ª–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —É—Ä–æ–∫ –∑–∞ 2-3 –º–∏–Ω—É—Ç—ã –¥–æ –Ω–∞—á–∞–ª–∞. –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Ç—ã –º–æ–∂–µ—à—å –∑–∞–¥–∞—Ç—å –∏—Ö –≤ Telegram @tutotalk. <br/> <br/>  –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ TutoTalk.`;
    } else if (!body.days) {
      let date = new Date(body.date);
      let options = {
        day: "numeric",
        month: "long",
        year: "numeric",
      };
      emailText = `–ü—Ä–∏–≤–µ—Ç! <br/>  –ú—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º —Ç–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –Ω–∞—à –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ ${body.time.slice(
        0,
        5
      )}, ${date.toLocaleDateString(
        "en-US",
        options
      )}.  –ú—ã –æ—Ç–ø—Ä–∞–≤–∏–º —Ç–µ–±–µ —Å—Å—ã–ª–∫—É –Ω–∞ —É—Ä–æ–∫ –∑–∞ 2-3 –º–∏–Ω—É—Ç—ã –¥–æ –Ω–∞—á–∞–ª–∞. –î–æ —Å–∫–æ—Ä–æ–π –≤—Å—Ç—Ä–µ—á–∏!!! <br/>  <br/> –° —É–≤–∞–∂–µ–Ω–∏–µ–º, –∫–æ–º–∞–Ω–¥–∞ TutoTalk.`;
    } else {
      emailText =
        "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ –∞–¥—Ä–µ—Å—É team@tutotalk.com";
    }

    // Configure and send the email using SendGrid
    const msg = {
      to: `${body.email}`,
      from: "team@tutotalk.com",
      subject: "Let the Language Adventure Begin! üåçüìö",
      html: emailText,
    };

    await mail.send(msg);

    // Email sent successfully
    return res.status(200).json({ message: "Email sent successfully." });
  } catch (error) {
    console.error(error);
    return res.status(500).json({ error: "Failed to send email." });
  }
}
